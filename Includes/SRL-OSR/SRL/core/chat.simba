(*
Chat
====

The Chat include contains all chat-related functions

.. contents::

*)

(*
.. code-block:: pascal

const
  CHAT_PUBLIC  = 0;
  CHAT_PRIVATE = 1;
  CHAT_CLAN    = 2;
  CHAT_TRADE   = 3;
*)
const
  CHAT_PUBLIC  = 0;
  CHAT_PRIVATE = 1;
  CHAT_CLAN    = 2;
  CHAT_TRADE   = 3;

(*
SetChat
~~~~~~~

.. code-block:: pascal

    function SetChat(state: string; chat: Integer): Boolean;

Sets Chat to desired state
Public  Private  Clan  Trade
  0        1       2     3

.. note::

    by Wizzup?, WT-Fakawi, Starblaster100, N1ke! & Coh3n
    Edit [Old School RS] by : Le Jingle (Feb. 28th, 2013)

Example:

.. code-block:: pascal

*)
function SetChat(state: string; chat: Integer): Boolean;
var
   x, y, mx, Color: Integer;
begin
  result := false;
  mx := 166 + (chat * 65); // adjust for use w/o game (has no options in old school)

  if (not InRange(chat, CHAT_PUBLIC, CHAT_TRADE)) then
  begin
    srl_Warn('SetChat', 'chat(' + IntToStr(chat) + ') does not exist.', warn_AllVersions);
    Exit;
  end;

  // No longer any 'all' or 'filter'
  case Lowercase(State) of
    'on': Color := 65280;
    'off': Color := 255;
    'hide': Color := 16776960;
    'friends' : Color := 65535;
    else
      srl_Warn('SetChat', state + ' does not exist.', warn_AllVersions);
  end;

  // slightly adjust new coordinates
  if (not FindColor(x, y, Color, mx - 10, 490, mx + 10, 500)) then
  begin
    Mouse(mx, 495, 5, 5, mouse_right);
    Wait(RandomRange(50, 150));

    if (Lowercase(State) = 'off') then
    begin
      case chat of
        CHAT_PUBLIC : Mouse(mx, 496 - 33, 8, 3, mouse_left);
        CHAT_PRIVATE..CHAT_TRADE : Mouse(mx, 496 - 20, 8, 3, mouse_left);
      end;

      Wait(RandomRange(50, 150));
      Result := FindColor(x, y, Color, mx - 10, 490, mx + 10, 500);
    end else
      Result := WaitOption(Capitalize(State), 300);
  end;
end;

(*
SetAllChats
~~~~~~~~~~~

.. code-block:: pascal

    procedure SetAllChats(Pub, Priv, Clan, Trade: string);

Sets all the chats to a particular state in one simple procedure.
Leave the parameter as '' if you wish to leave the chat as it is.

.. note::

    by ZephyrsFury
    Edit [Old School RS] by : Le Jingle (Feb. 28th, 2013)

Example:

.. code-block:: pascal

    SetAlChats('Hide', '', 'Off', '');

*)
procedure SetAllChats(Pub, Priv, Clan, Trade: string);
var
  States: TStringArray;
  II: Integer;
begin
  if (not(LoggedIn)) then Exit;
  States := [Pub, Priv, Clan, Trade];
  for II := 0 to 3 do
  begin
    if (States[II] = '') then Continue;
    SetChat(States[II], II);
  end
end;

(*
ChatsOff
~~~~~~~~

.. code-block:: pascal

    procedure ChatsOff;


Sets all Chats to off.

.. note::

    by Starblaster100
    Edit [Old School RS] by : Le Jingle (Feb. 28th, 2013)

Example:

.. code-block:: pascal

*)
procedure ChatsOff;
var
  i: Integer;
begin
  for i := CHAT_PUBLIC to CHAT_TRADE do
    SetChat('off', i);
end;


(*
ChatWait
~~~~~~~~

.. code-block:: pascal

    procedure ChatWait;

Waits while there's Please Wait in the chatbox.

.. note::

    by Nielsie95

Example:

.. code-block:: pascal

*)
procedure ChatWait;
begin
  Wait(400 + Random(500));
end;

(*
ClickContinueEx
~~~~~~~~~~~~~~~

.. code-block:: pascal

    function ClickContinueEx(Click, Wait: Boolean): Boolean;


Returns true if the blue 'Click To Continue' text in the chat box is found.
If will click if Click = True, calls ChatWait if Wait = True.

.. note::

    by _ChArMz & Narcle (Original by EvilChicken!)
    Edit [Old School RS] by : Le Jingle (Feb. 28th, 2013)
    Edit [Old School RS] by : Slushpuppy (March. 3rd, 2013)

Example:

.. code-block:: pascal

*)
function ClickContinueEx(Click, Wait: Boolean): Boolean;
var
  bTxt, wTxt, SearchTPA, TextTPA, Matches : TPointArray;
  Search2D : T2DPointArray;
  b : TBox;
  Height, i, x, y : Integer;
begin
  Result := false;

  // only 1 blue color in chat.
  FindColorsTolerance(bTxt, 16711680, MCX1, MCY1, MCX2, MCY2, 10);
  FindColorsTolerance(wTxt, 16777215, MCX1, MCY1, MCX2, MCY2, 30);
  SearchTPA := CombineTPA(bTxt, wTxt);
  if Length(SearchTPA) < 1 then
    Exit;

  Search2D := SplitTPAEx(SearchTPA, 20, 2);

  // TO DO: figure out proper Text name (CharsNPC07).. then call will work.
  TextTPA := LoadTextTPA('here to conti', CharsNPC07, Height);

  for i := 0 to High(Search2D) do
  begin
    Result := FindTextTPAinTPA(Height, TextTPA, Search2D[i], Matches);
    if Result and Click then
    begin
      b := GetTPABounds(Search2D[i]);
      GetMousePos(x, y);
      if PointInBox(Point(x, y), b) then
        Mouse(x, y, 2, 1, true)
      else
        with b do
          Mouse(RandomRange(x1, x2), RandomRange(y1 + 2, y2 - 2), 2, 1, true);
      if Wait then
        ChatWait;
    end;
    if Result then
      Break;
  end;
end;

(*
ClickContinue
~~~~~~~~~~~~~

.. code-block:: pascal

    function ClickContinue(DoWait: Boolean): Boolean;


Returns true if the green button in the chat box is found.
It will click with mouse to continue.
If DoWait = true will wait until color count changes.

.. note::

    by _ChArMz & Narcle (Original by EvilChicken!)
    Edit [Old School RS] by : Le Jingle (Feb. 28th, 2013)

Example:

.. code-block:: pascal

*)
Function ClickContinue(DoWait: Boolean): Boolean; // removed spacebar (not compatible)
var
  TPA: TPointArray;
  i, C, T: integer;
  B: TBox;
  ATPA: T2DPointArray;
begin
  if ClickContinueEx(true, DoWait) then
  begin
    Result := true;
    Exit;
  end;
  C := GetColorToleranceSpeed;
  SetColorToleranceSpeed(1);
  FindColorsTolerance(TPA, 11776948, MCX1, MCY1, MCX2, MCY2, 15);//color is constant atm
  SetColorToleranceSpeed(C);
  if Length(TPA) < 1 then
    Exit;
  ATPA := SplitTPA(TPA, 2);
  for i := 0 to High(ATPA) do
  begin
    B := GetTPABounds(ATPA[i]);
    if InRange(B.x2-B.x1, 58, 72) then
    if (CountColorTolerance(1203763, B.x1-5, B.y1+1, B.x2+5, B.y1+15, 37) > 50) then
    begin
      C := CountColor(0, MCX1, MCY1, MCX2, MCY2);
      Mouse(B.x1, B.y1, (B.x2-B.x1), 8, true);
      Result := True;
      T := GetSystemTime + 10000;
      if DoWait then
        while (C = CountColor(0, MCX1, MCY1, MCX2, MCY2)) and (GetSystemTime < T) do
          Wait(50+random(50));
      Exit;
    end;
  end;
end;

(*
ClickToContinue
~~~~~~~~~~~~~~~

.. code-block:: pascal

    function ClickToContinue: Boolean;

Click the blue 'Click To Continue' text in the chat box.

.. note::

    by ZephyrsFury

Example:

.. code-block:: pascal

*)
function ClickToContinue: Boolean;
begin
  Result := ClickContinue(False);
end;

(*
TextCoords
~~~~~~~~~~

.. code-block:: pascal

    Function TextCoords(textn: Integer): TPoint;

Returns x, y for text. (1 to 8)

.. note::

    by Wizzup?
    Edit [Old School RS] by : Le Jingle (Feb. 28th, 2013)


Example:

.. code-block:: pascal

*)
function TextCoords(textn: Integer): TPoint;
begin
  Result.X := 15;
  Result.Y := 347 + (14 * (textn - 1));
end;

(*
GetChatBoxText
~~~~~~~~~~~~~~

.. code-block:: pascal

    function GetChatBoxText(Line, TextCol: Integer): string;

Gets text on the line Line with colour TextCol.
(Line 1 is the top, Line 8 is the bottom line).
Colours:

    - clMessage/clBlack - Black text messages ("Oh Dear you are dead", etc).
    - clChat/clBlue     - Chat messages from you and other players.
    - clTrade/clPurple  - Colour of trade request text.
    - clFriend          - Colour of friend and clan chat.

Works with other colours too.


.. note::

    by ZephyrsFury

Example:

.. code-block:: pascal


*)
function GetChatBoxText(Line, TextCol: Integer): string;
var
  P: TPoint;
  cArr: TPointArray;
  B: TBox;
begin
  Result := '';
  P := TextCoords(Line);
  if (FindColorsTolerance(cArr, TextCol, MCX1, P.y, MCX2, P.y + 13, 0)) then
  begin
    B := GetTPABounds(cArr);
    result := Trim(GetTextAtExWrap(b.x1-1,p.y,B.x2+1,p.y+13,0,5,2,TextCol,0,SmallChars07));
  end;
end;

(*
FindChatBoxText
~~~~~~~~~~~~~~~

.. code-block:: pascal

    function FindChatBoxText(Text: string; Line: Integer; TextCol: Integer): Boolean;

Searches for Text on Line with colour TextCol. True if found.

.. note::

    by ZephyrsFury

Example:

.. code-block:: pascal



*)
function FindChatBoxText(Text: string; Line: Integer; TextCol: Integer): Boolean;
begin
  Result := (Pos(Text, GetChatBoxText(Line, TextCol)) > 0);
end;

(*
IsChatBoxTextBetween
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function IsChatBoxTextBetween(Text: string; TextCol, StartLine, EndLine: Integer): Boolean;

Returns true if Text with colour TextCol is found anywhere in the chat box.


.. note::

    by ZephyrsFury

Example:

.. code-block:: pascal


*)
function IsChatBoxTextBetween(Text: string; TextCol, StartLine, EndLine: Integer): Boolean;
var
  II: Integer;
begin
  Result := True;
  for II := Max(StartLine, EndLine) downto Min(StartLine, EndLine) do
    if (FindChatBoxText(Text, II, TextCol)) then
      Exit;
  Result := False;
end;

(*
IsChatBoxTextAnyLine
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function IsChatBoxTextAnyLine(Text: string; TextCol: Integer): Boolean;

Returns true if Text with colour TextCol is found anywhere in the chat box.


.. note::

    by ZephyrsFury

Example:

.. code-block:: pascal

*)
function IsChatBoxTextAnyLine(Text: string; TextCol: Integer): Boolean;
begin
  Result := IsChatBoxTextBetween(Text, TextCol, 1, 8);
end;

(*
ChatBoxTextArray
~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function ChatBoxTextArray(TextCol: Integer): TStringArray;

 Gets and return a TStringArray with the contents of each line
 with the colour TextCol (see GetChatBoxText for list of colours).

 Gets and return a TStringArray with the contents of each line
 with the colour TextCol (see GetChatBoxText for list of colours).
    - Line 1 is Result[1]
    - Line 2 is Result[2]
    - Line 3 is Result[3]
    - Line 4 is Result[4]
    - Line 5 is Result[5]
    - Line 6 is Result[6]
    - Line 7 is Result[7]
    - Line 8 is Result[8]

.. note::

    by ZephyrsFury

Example:

.. code-block:: pascal


*)
function ChatBoxTextArray(TextCol: Integer): TStringArray;
var
  II: Integer;
begin
  SetLength(Result, 9);
  for II := 8 downto 1 do
    Result[II] := GetChatBoxText(II, TextCol);
end;

(*
GetBlackChatMessage
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function GetBlackChatMessage: String;

Gets text with color 0 in last chat line.

.. note::

    by Wizzup?

Example:

.. code-block:: pascal

*)
function GetBlackChatMessage: string;
begin
  Result := GetChatBoxText(8, clMessage);
end;

(*
FindBlackChatMessage
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function FindBlackChatMessage(ChatMsg: String): Boolean;

Returns True if text with color 0 in last chat line is found.

.. note::

    by Wizzup?

Example:

.. code-block:: pascal


*)
function FindBlackChatMessage(ChatMsg: string): Boolean;
begin
  Result := (Pos(ChatMsg, GetChatBoxText(8, clMessage)) > 0);
end;

(*
LastChatter
~~~~~~~~~~~

.. code-block:: pascal

    function LastChatter(var name: String): Boolean;

Returns name and true if a person was talking, or false and the text

.. note::

    by masquerader

Example:

.. code-block:: pascal


*)
function LastChatter(var name: string): Boolean;
var
  i: Integer;
begin
  Result := False;
  Name := LowerCase(GetBlackChatMessage);
  i := Pos(':', name);
  if (i <> 0) then
  begin
    Delete(Name, i, i);
    Result := True;
  end;
end;

(*
GetLastChatText
~~~~~~~~~~~~~~~

.. code-block:: pascal

    function GetLastChatText(var chat: String): Boolean;

Returns true if blue chat text was found

.. note::

    by masquerader / Wizzup?

Example:

.. code-block:: pascal


*)
function GetLastChatText(var chat: string): Boolean;
begin
  Chat := GetChatBoxText(8, clChat);
  Result := (Chat <> '');
end;

(*
InChat
~~~~~~

.. code-block:: pascal

    function InChat(Text: String): Boolean;

Grabs Last Chat Line and performs checks on occurence of text


.. note::

    by WT-Fakawi

Example:

.. code-block:: pascal


*)
function InChat(Text: string): Boolean;
var
  s: string;
begin
  if (not (GetLastChatText(s))) then
    LastChatter(s);

  Result := (Pos(LowerCase(Text), Lowercase(s)) > 0);
end;

(*
FixChat
~~~~~~~

.. code-block:: pascal

    procedure FixChat;

Scrolls ChatText scrollbar down.

.. note::

    by WT-Fakawi
    Edit [Old School RS] by : Le Jingle (Feb. 28th, 2013)

Example:

.. code-block:: pascal


*)
procedure FixChat;
var
  ScrollX, ScrollY: Integer;
begin
  ScrollX := 507 + Random(8);
  ScrollY := 451 + Random(8);
  if (GetColor(502, 442) = 1646629) then // changed coords + color
  begin
    MMouse(ScrollX, ScrollY, 0, 0);
    HoldMouse(ScrollX, ScrollY, mouse_left);
    while (GetColor(502, 442) = 1646629)  do
      Wait(10 + random(15));
	  Wait(50+random(50));
    ReleaseMouse(ScrollX, ScrollY, mouse_left);
    Wait(100+random(50));
  end;
end;


(*
SaveToChatLog
~~~~~~~~~~~~~

.. code-block:: pascal

    procedure SaveToChatLog;

Saves chat to log file.

.. note::

    by WT-Fakawi & masquerader

Example:

.. code-block:: pascal


*)
procedure SaveToChatLog;
begin
  FixChat;
  OldLine := TheLine;

  if(LastChatter(TheName))then
  begin
    GetLastChatText(TheLine);
    TheLine:=' '+TheLine+' ';
    if OldLine <> TheLine then
    try  AddToSRLLog(TheName+':'+TheLine); except end;
  end else
  begin
    TheLine:=TheName;
    if OldLine <> TheLine then
    try  AddToSRLLog(TheLine);  except end;
  end;
end;

(*
ColorEffectAdd
~~~~~~~~~~~~~~

.. code-block:: pascal

    function ColorEffectAdd(Color, Effect: Boolean): string;

Returns a RS chat effect based on 'Color' and 'Effect' booleans.

.. note::

    by NiCbaZ

Example:

.. code-block:: pascal


*)
function ColorEffectAdd(Color, Effect: Boolean): string;
var
  Str : TStringArray;

begin
  Result := '';
  Str := ['flash1:', 'flash2:', 'flash3:', 'glow1:', 'glow2:', 'glow3:', 'red:',
    'green:', 'cyan:', 'purple:', 'white:', 'scroll:', 'shake:', 'slide:',
    'wave:', 'wave2:'];
  if Color then
    Result := Str[Random(11)];
  if Effect then
    Result := Result + Str[11 + Random(5)];
end;

(*
GetNPCChatName
~~~~~~~~~~~~~~

.. code-block:: pascal

    function GetNPCChatName(): string;

Gets the name of the random event NPC from the top of the chat box.  The proper
font doesn't exist yet, so it returns a random string of characters.

.. note::

    Author: DemiseSythe
    Last Modified: 1/03/2013 By Justin.

Example:

.. code-block:: pascal

    writeln(getNPCChatName());
*)
function GetNPCChatName(): string;
begin
  result := getTextAtExWrap(116, 358, 498, 377, 0, 50, 30, 128, 15, CharsNPC07);
end;

(*
AreTalking
~~~~~~~~~~

.. code-block:: pascal

    function AreTalking(): boolean;

Returns true if player is talking to an NPC.

.. note::

    Author: Wizzup?
    Last Modified: Jan. 22nd, 2012 by Coh3n

Example:

.. code-block:: pascal

    while (areTalking()) do
      clickContinue(true, true);
*)
function AreTalking(): boolean;
begin
  result := (getNPCChatName <> '');
end;

(*
DoConversation
~~~~~~~~~~~~~~

.. code-block:: pascal

    function DoConversation(resultText: string; clickresult: boolean): boolean;

Goes through the initial dialog of a random.  Will keep clicking to continue
until the conversation's 'resultText' is found.  Will click to continue when
'resultText' is found if 'clickresult' is set to true.  Set 'resultText' to ''
to click continue until conversation is over.

.. note::

    Author: Coh3n
    Last Modified: Jan. 22nd, 2012 by Coh3n

Example:

.. code-block:: pascal

    if (DoConversation('thank', true)) then
      writeln('Finished conversation');
*)
function DoConversation(resultText: string; clickResult: boolean): boolean;
var
  t: integer;
begin
  while (t < 25) do // max of 25 "click to continue's"
  begin
    if (resultText <> '') then
      if (findNPCChatText(resultText, nothing)) then
      begin
        if (clickResult) then
          clickContinue(true);

        result := true;
        break;
      end;

    // break if there's no more conversation
    if (not clickContinue(true)) then
      break;

    wait(100 + random(200));
    inc(t);
  end;
end;
