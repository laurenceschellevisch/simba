program ReflPathMakerV2;
{$DEFINE SMART}
{$I SRL-OSR/SRL.Simba}
{$I SRL-OSR/SRL/Reflection/Reflection.simba}

{*
This tool makes a path by printing every single point you traverse in an array
for easy copying. Simply walk to the starting point, start the script and walk
the path you want to make. When you are finished, simply stop the script.
If you have distance between tiles and you want a specific point added, just
click "Enable Smart" and it will be added (ignoring distance).

By: Turpinator & Krazy_Meerkat

*}

const
{how randy do you like it?}
randy = 0;
{number of tiles between path points}
PathDistance = 1;

Procedure DeclarePlayers;
begin
  HowManyPlayers := 1;
  NumberOfPlayers(HowManyPlayers);
  CurrentPlayer := 0;
end;

function TPAPathToString(TPA: TPointArray): String;
var
i : integer;
begin
  result := '';
  for i := 0 to length(TPA) - 1 do
    result := result + ' Point(' + intToStr(TPA[i].X) + ', ' + intToStr(TPA[i].Y) + '),';
  result[1] := '[';
  result[length(result)] := ']';
end;

function TPAPathToStringRandom(TPA: TPointArray; ran: integer): String;
var
i : integer;
ranstr: string;
begin
  result := '';
  ranstr := ' + RandomRange(' + IntToStr(iAbs(ran)*-1) + ', ' + IntToStr(iAbs(ran)) + ')';
  for i := 0 to length(TPA) - 1 do
    result := result + ' Point(' + intToStr(TPA[i].X) + ranstr + ', ' + intToStr(TPA[i].Y) + ranstr + '),';
  result[1] := '[';
  result[length(result)] := ']';
end;

var
  path : TPointArray;
  currentptile, playat: Tpoint;
begin
  DeclarePlayers;
  SetupSRL;
  setlength(path, 0);
  SmartSetEnabled(SmartCurrentTarget, false);
  if not LoggedIn then
  begin
    writeln('Log in and walk to the first point before starting the script :)');
    TerminateScript;
  end;
  repeat
    playat:= R_GetTileGlobal;
    if ((not(currentptile = playat) and (distance(currentptile.x, currentptile.y, playat.x, playat.y) >= PathDistance)) or (SmartEnabled(SmartCurrentTarget))) then
    begin
      if (SmartEnabled(SmartCurrentTarget)) then
        SmartSetEnabled(SmartCurrentTarget, false);
      currentptile:= R_GetTileGlobal;
      setlength(path, length(path) + 1);
      path[length(path) - 1] := R_GetTileGlobal;
      ClearDebug;
      if randy > 0 then
        writeln(TPAPathToStringRandom(path, randy))
      else
        writeln(TPAPathToString(path));
    end;
    wait(100);
  until false;
end.
