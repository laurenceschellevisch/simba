(*
Bank
====

The Bank include contains Bank finders, and all banking routines.

Normal Banks:
'feb' = Falador East Bank
'fwb' = Falador West Bank
'veb' = Varrock East Bank
'vwb' = Varrock West Bank
'geb' = Varrock GE Bank
'db'  = Draynor Bank
'akb' = Al-Kharid Bank
'eb'  = Edgeville Bank
'ctb' = Catherby bank
'clt' = Camelot bank
'nab' = North Ardougne bank
'sab' = South Ardougne bank
'ynb' = Yanille bank
'ngb' = North gnome bank
'sgb' = South gnome bank
'wgb' = Warrior guild bank
'fgb' = Fishing guild bank

Special Bank:
SRL_BANK_SW = Soul Wars chest
SRL_BANK_CW = Castle Wars chest
SRL_BANK_B  = Burthrope chest (outside warriors guild)
SRL_BANK_GG = Gamer's Grotto (north of Falador)
SRL_BANK_SP = Shantay Pass chest

.. contents::

*)

const
  Bank_FE = 'feb'; // (Falador East Bank)
  Bank_FW = 'fwb'; // (Falador West Bank)
  Bank_VE = 'veb'; // (Varrock East Bank)
  Bank_VW = 'vwb'; // (Varrock West Bank)
  Bank_GE = 'geb'; // (Varrock GE Bank)
  Bank_DR = 'db' ; // (Draynor Bank)
  Bank_AK = 'akb'; // (Al-Kharid Bank)
  Bank_EV = 'eb' ; // (Edgeville Bank)
  Bank_CT = 'ctb'; // (Catherby bank)
  Bank_CM = 'clt'; // (Camelot bank)
  Bank_NA = 'nab'; // (North Ardougne bank)
  Bank_SA = 'sab'; // (South Ardougne bank)
  Bank_YN = 'ynb'; // (Yanille bank)
  Bank_NG = 'ngb'; // (North gnome bank)
  Bank_SG = 'sgb'; // (South gnome bank)
  Bank_WG = 'wgb'; // (Warrior guild bank)
  Bank_FG = 'fgb'; // (Fishing guild bank)

  SRL_BANK_SW = 20;   // Soul Wars chest
  SRL_BANK_CW = 21;   // Castle Wars chest
  SRL_BANK_B  = 22;   // Burthrope chest (outside warriors guild)
  SRL_BANK_GG = 23;   // Gamer's Grotto (north of Falador)
  SRL_BANK_SP = 24;   // Shantay Pass chest

(*
BankScreen
~~~~~~~~~~

.. code-block:: pascal

    function BankScreen: Boolean;

Finds Bankscreen. Returns true if Found.

.. note::

    Author: SRL Dev Team
    Last Modified: Ashaman88 -07

Example:

.. code-block:: pascal

    BankOpen := BankScreen;
*)
function BankScreen: Boolean;
begin
  result := findTextTPA(2070783, 5, 115, 287, 155, 312, 'mode', 'SmallChars07', nothing);
end;

(*
BankTabs
~~~~~~~~~~

.. code-block:: pascal

    function BankTabs: Boolean;

Returns true if bank tabs are being used

.. note::

    Author: elfyyy
    Last Modified: 11-20-14

Example:

.. code-block:: pascal


*)
function BankTabs: Boolean;
begin
  Result := (not findTextTPA(2070783, 5, 23, 41, 45, 52, '600', 'StatChars07', nothing));
end;

(*
DepositScreen
~~~~~~~~~~~~~

.. code-block:: pascal

    function DepositScreen: Boolean;

Returns true if deposit screen is Found.

.. note::

    Author: Ashaman88 -07

Example:

.. code-block:: pascal

    BankOpen := (not DepositScreen);
*)
function DepositScreen: Boolean;
var
  X, Y: Integer;
begin
  Result := FindText(x, y, 'Deposit Box', upChars07, 92, 29, 396, 54);
end;

(*
PinPending
~~~~~~~~~

.. code-block:: pascal

    function PinPending: Boolean;

Finds the Pin Pending. Returns true if Found.

.. note::

    Author: Justin

Example:

.. code-block:: pascal

    if PinPending then
    ConfirmPin();
*)
function PinPending : Boolean;
begin
  Result := FindTextTPA(65535, 10, 114, 135, 204, 158, 'asked', charsNPC07, Nothing);
end;

(*
ConfirmPin
~~~~~~~~~

.. code-block:: pascal

    function ConfirmPin: Boolean;

Find and click 'Yes, I asked for this. I want this PIN'.

.. note::

    Author: Justin

Example:

.. code-block:: pascal

    if PinPending then
    ConfirmPin();
*)
function ConfirmPin : Boolean;
var
  Timer : Integer;
begin
  Result := False;
  Timer := GetSystemTime + 10000;
    while PinPending do
  begin
    if Timer < GetSystemTime then
      Break;
    MouseBox(115, 137, 387, 158, mouse_Move)
      if WaitUpText('Ok', 300) then
        ClickMouse2(mouse_Left);
        Result := (BankScreen) or (PinScreen);
    Wait(700+Random(300));
  end;
end;

(*
PinScreen
~~~~~~~~~

.. code-block:: pascal

    function PinScreen: Boolean;

Finds Pin Screen. Returns true if Found.

.. note::

    Author: Naum
    Last Modified: 11-21-14 elfyyy

Example:

.. code-block:: pascal

    if PinScreen then
    InPin();
*)
function PinScreen : Boolean;
begin
  Result := FindTextTPA(2070783, 0, 105, 62, 150, 75, 'Please', upChars07, Nothing);
end;

(*
ClosePinScreen
~~~~~~~~~~~~~~

.. code-block:: pascal

    function ClosePinScreen: Boolean;

Results true is PinScreen is not open.

.. note::

    Author: SRL
    Last Modified: Unknown

Example:

.. code-block:: pascal

    if PinScreen then
    Result := ClosePinScreen;
*)
function ClosePinScreen: Boolean;
var
  Timer : Integer;
begin
  Result := False;
  Timer := GetSystemTime + 10000;
  while PinScreen do
  begin
    if Timer > GetSystemTime then
      Break;
    MouseBox(332, 258, 489, 281, mouse_left);
    Wait(500);
  end;
  Result := not PinScreen;
end;

(*
getBankItemCount
~~~~~

.. code-block:: pascal

    function getBankItemCount: integer;

Returns the number of total items in your bank account.

.. note::

    Author: Flight
    Last Modified: 11-20-14 elfyyy

Example:

.. code-block:: pascal

    writeln('I have a total of '+intToStr(getBankItemCount)+' items in my bank account');
*)
function getBankItemCount: integer;
var
  S: String;
  TheBox: TBox;
begin
  Result := 0;
  if Not BankScreen then
    Exit;
  if BankTabs then
    TheBox := IntToBox(17, 8, 37, 27)
  else
    TheBox := IntToBox(23, 41, 45, 52);

  S := GetTextAtExWrap(TheBox.X1, TheBox.Y1, TheBox.X2, TheBox.Y2, 1, 2, 1, 2070783, 0, StatChars07);
  S := GetNumbers(S);
  Result := StrToInt(Replace(S, ' ', ''));
end;

(*
InPin
~~~~~

.. code-block:: pascal

    function Inpin(Pin: string): Boolean;

Enters bank pin. Will try 3 times, returns true if bank is opened.

.. note::

    Author: ZephyrsFury and Nava2
    Last Modified: Unknown

Example:

.. code-block:: pascal

    if PinScreen then
    InPin('1234');
*)
function InPin(Pin: string): Boolean;
var
  Tx, Ty, X, Y, H, I, J, Tries, ColorCount : Integer;
  Boxes: array of TBox;
begin
  Result := False;
  if not PinScreen then Exit;

  if (GetNumbers(Pin) <> Pin) then
  begin
    srl_Warn('InPin', '''' + Pin + ''' is not a valid Pin', warn_AllVersions);
    Exit;
  end;
  if (Length(Pin) <> 4) then
  begin
    srl_Warn('InPin', 'Pin must be 4 digits long', warn_AllVersions);
    Exit;
  end;

  Boxes := [IntToBox(37, 107, 100, 170), IntToBox(127, 107, 190, 170), IntToBox(217, 107, 280, 170), IntToBox(307, 107, 370, 170),
            IntToBox(37, 179, 100, 242), IntToBox(127, 179, 190, 242), IntToBox(217, 179, 280, 242),
            IntToBox(37, 251, 100, 314), IntToBox(127, 251, 190, 314), IntToBox(217, 251, 280, 314)];

  while PinScreen do
  begin
    for I := 1 to 4 do
    begin
      if not PinScreen then Break;

      ColorCount := CountColorTolerance(clWhite, 150, 80, 380, 100, 10);
      // Counts the "Now click the NUM_X digit.". This is used later on.

      GetMousePos(X, Y);
      if (FindText(Tx, Ty, Pin[I], upChars07, 30, 100, 383, 319)) then
      begin
        H := High(Boxes);
        for J := 0 to H do
          if IntInBox(Tx, Ty, Boxes[J]) then
          begin
            with Boxes[J] do
              if PinScreen then
                MouseBox(x1, y1, x2, y2, mouse_left);
            Break;
          end;
      end else
      begin
        H := High(Boxes);
        for J := 0 to H do
          if IntInBox(X, Y, Boxes[J]) then
          begin
            with Boxes[J] do
              if PinScreen then
                MouseBox(x1, y1, x2, y2, mouse_left);
            Break;
          end;
      end;

      Wait(100);
      while (CountColorTolerance(clWhite, 150, 80, 380, 100, 10) = ColorCount) do
        Wait(500);

      Wait(RandomRange(300, 600));

      if BankScreen or not PinScreen then
      begin
        Result := True;
        Exit;
      end;
    end;

    WaitFunc(@BankScreen, 50, 300);

    ClickContinue(True);
    while not FindColor(Tx, Ty, 0, 7, 460, 69, 474) do
    begin
      Wait(500);
      if not LoggedIn then
        Exit;
    end;
    Inc(Tries);

    if Tries > 2 then
    begin
      srl_Warn('InPin', '''' + Pin + ''' is not the correct Pin', warn_AllVersions);
      ClosePinScreen;
      Exit;
    end;

  end;
  Result := BankScreen;
end;

(*
MSTPointToBankPoint
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function MSTPointToBankPoint(P: TPoint): TPoint;

Converts a point on the Mainscreen to the point in the Bank.

.. note::

    Author: euphemism
    Last Modified: 11-21-14 elfyyy

Example:

.. code-block:: pascal

    ItemSlot := MSTPointToBankPoint(Point);
*)
function MSTPointToBankPoint(MSP: TPoint): TPoint;
var
  H, I: Integer;
  BetweenRowsAndColumns: Array of TBoxArray; //The rows and columns of empty space between the item slots.
  StartPoint0, StartPoint1: TPoint;
begin
  if BankTabs then
  begin
    StartPoint0 := Point(259, 115);
    StartPoint1 := Point(114, 192);
  end
  else
  begin
    StartPoint0 := Point(259, 99);
    StartPoint1 := Point(115, 172);
  end;

  SetLength(BetweenRowsAndColumns, 2);
  BetweenRowsAndColumns[0] := Grid(1, 5, (MBX2 - MBX1), 5, 0, 38, StartPoint0);
  BetweenRowsAndColumns[1] := Grid(7, 1, 14, (MBY2 - MBY1), 47, 0, StartPoint1);

  for H := 0 to 1 do
    for I := 0 to High(BetweenRowsAndColumns[h]) do
      if PointInBox(MSP, BetweenRowsAndColumns[h][i]) then
      begin
        srl_Warn('MSTPointToBankPoint', 'Point not in any bank slot, returning first slot.', warn_AllVersions);
        Result := Point(0, 0);
        Exit;
      end;
  Result := Point((((MSP.x - MBX1)) div 48), ((MSP.y - MBY1) div 39));
end;

(*
BankPointToBankIndex
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function BankPointToBankIndex(P: TPoint): Integer;

Converts a Bank Point (Row,Col) to Bank Index (spot in bank). (0, 0) = 1

.. note::

    Author: Wizzup?
    Last Modified: March 2013

Example:

.. code-block:: pascal

    BankSlot := BankPointToBankIndex(itemPoint);
*)
function BankPointToBankIndex(P: TPoint): Integer;
begin
  Result := P.Y * 8 + P.X + 1;
end;

(*
BankIndexToBankPoint
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function BankIndexToBankPoint(ind: Integer): TPoint;

Converts the Bank Index (spot in bank) to a Bank Point (Row,Col). 1 = (0, 0)

.. note::

    Author: Wizzup?
    Last Modified: March 2013

Example:

.. code-block:: pascal

    BankPoint := BankIndexToBankPoint(index);
*)
function BankIndexToBankPoint(Index: Integer): TPoint;
begin
  if (not InRange(Index, 1, 48)) then
  begin
    srl_Warn('BankIndexToBankPoint', 'Specified index is not a visible bank slot.  Returning first slot''s bank point.', warn_AllVersions);
    Result := Point(0, 0);
    Exit;
  end;
  Index := Index - 1;
  Result := Point((Index mod 8), (Index div 8));
end;

(*
BankIndexToMSBox
~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function BankIndexToMSBox(Index: Integer): TBox;

Converts the Bank Index (spot in bank) to a Mainscreen TBox of the Index.

.. note::

    Author: Wizzup
    Last Modified: 11-20-14 elfyyy

Example:

.. code-block:: pascal

    msBox := BankIndexToMSBox(index);
*)
function BankIndexToMSBox(Index: Integer): TBox;
var
   P: TPoint;
   Boxes: TBoxArray;
begin
  if BankTabs then
    P := Point(88,99)
  else
    P := Point(88,84);

  Boxes:= Grid(8, 6, 32, 32, 48, 36, P);
  Result := Boxes[Index - 1];
end;

(*
BankIndexToMSPoint
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function BankIndexToMSPoint(Index: Integer): TPoint;

Converts the Bank Index (spot in bank) to a Mainscreen TPoint of the Index. (Middle)

.. note::

    Author: euphemism
    Last Modified: 11-21-14 elfyyy

Example:

.. code-block:: pascal

    msPoint := BankIndexToMSPoint(index);
*)
function BankIndexToMSPoint(Index: Integer): TPoint;
begin
  if (not InRange(Index, 1, 48)) then
  begin
    srl_Warn('BankIndexToMSPoint', 'Specified index is not a visible bank slot.  Returning first slot''s bank point.', warn_AllVersions);
    Result := MiddleBox(BankIndexToMSBox(1));
    Exit;
  end;
  Result := MiddleBox(BankIndexToMSBox(Index));
end;

(*
GetBankItemAmount
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function GetBankIndexItemAmount(const Index: Integer): Integer;

Returns the amount of an item in the bank at bank index, Index.

.. note::

    Author: Daniel
    Last Modified: Jan. 03, 2012 by Daniel

Example:

.. code-block:: pascal

    amt := GetBankIndexItemAmount(13);
*)
function GetBankIndexItemAmount(const Index: Integer): Integer;
begin
  Result := getAmountBox(BankIndexToMSBox(Index));
end;

(*
GetBankItemAmount
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function GetBankItemAmount(const Row, Col: Integer): Integer;

Returns the amount of an item in the bank at bank screen coordinates (Row, Col).

.. note::

    Author: Daniel
    Last Modified: Ashaman88 -07

Example:

.. code-block:: pascal

    amt := GetBankItemAmount(0, 5);
*)
function GetBankItemAmount(const Row, Col: Integer): Integer;
begin
  Result := GetBankIndexItemAmount(BankPointToBankIndex(Point(Row, Col)));
end;

(*
GetMSBankItemAmount
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function GetMSBankItemAmount(const x, y: Integer): Integer;

Returns the amount of an item in the bank at main screen coordinates x, y.

.. note::

    Author: Daniel
    Last Modified: Ashaman88 -07

Example:

.. code-block:: pascal

    amt := GetMSBankItemAmount(250, 100);
*)
function GetMSBankItemAmount(const x, y: Integer): Integer;
begin
  Result := GetBankIndexItemAmount(BankPointToBankIndex(MSTPointToBankPoint(Point(x, y))));
end;

(*
DepositItemBox
~~~~~~~~~~~~~~

.. code-block:: pascal

    function DepositItemBox(Item: Integer): TBox;

Returns a TBox surround Item (1 to 28) in the Deposit Box screen.

.. note::

    Author: ZephyrsFury
    Last Modified: Ashaman88 -07

Example:

.. code-block:: pascal

    currentItem := DepositItemBox(itemSlot);
*)
function DepositItemBox(Item: Integer): TBox;
begin
  Result.X1 := 132 + (Item - 1) mod 7 * 40;
  Result.Y1 := 75 + (Item - 1) div 7 * 42;
  Result.X2 := Result.X1 + 30;
  Result.Y2 := Result.Y1 + 30;
end;

(*
FixBank
~~~~~~~

.. code-block:: pascal

    procedure FixBank;

Scrolls the bank screen up.

.. note::

    Author: lordsaturn, Nava2, IceFire908 & Bixby Sayz
    Last Modified: 11-20-14 elfyyy

Example:

.. code-block:: pascal

    FixBank;
*)
procedure FixBank;
var
  Timer: Integer;
  Box: Tbox;
begin
  if BankTabs then
    Box := intToBox(482, 97, 497, 102)
  else
    Box := intToBox(482, 75, 497, 80);

  if (BankScreen) then
    if (not (CountColor(4216418, Box.X1, Box.Y1, Box.X2, Box.Y2) > 0)) then
    begin
      Timer := GetTimeRunning + 5000;
      MouseBox(Box.X1, Box.Y1, Box.X2, Box.Y2, mouse_Left);
      while ((not (CountColor(4216418, Box.X1, Box.Y1, Box.X2, Box.Y2) > 0)) and (GetTimeRunning < Timer)) do
        Wait(50 + Random(50));
      Wait(RandomRange(100, 200));
  end;
end;

(*
MouseBankSlot
~~~~~~~~~~~~~

.. code-block:: pascal

    procedure MouseBankSlot(BankSlot, Action: integer);

.. note::

    by Fwd Motion
    Last Modified: Ashaman88 -07

Example:

.. code-block:: pascal

    MouseBankSlot(1, mouse_Right);
    if (WaitOption('ithdraw-All', 500)) then
      Writeln('Withdrew item');
*)
procedure MouseBankSlot(BankSlot, Action: integer);
var
  BankBox: TBox;
  X, Y: Integer;
begin
  BankBox := BankIndexToMSBox(BankSlot);
  GetMousePos(X, Y);
  if (not PointInBox(Point(X, Y), BankBox)) then
    MouseBox(BankBox.X1, BankBox.Y1, BankBox.X2, BankBox.Y2, Action);
end;

(*
Deposit
~~~~~~~

.. code-block:: pascal

    Procedure Deposit(SlotFrom, SlotTo: Integer; vType: Variant);

 Deposits from Slot to ToSlot.
  vType True = Deposit All. vType False = Deposit one by one.
  Any integer is deposit with Deposit X. (except for 5 and 10)

.. note::

    Author: WT-Fakawi/PPLSUQBAWLZ/Stupid3ooo/Town
    Last Modified: Ashaman88 -07
                   Slushpuppy - 03 March 13

Example:

.. code-block:: pascal

    Deposit(1, 28, True);
*)
procedure Deposit(SlotFrom, SlotTo: Integer; vType: Variant);
var
   DepositX, BScreen, DScreen: Boolean;
   All: Variant;
   I, T, x, y: Integer;
   B: TBox;
begin
  BScreen := BankScreen;
  if (not(BScreen)) then
    DScreen := DepositScreen;
  if not (BScreen or DScreen) then
    Exit;
  if vType = 2 then
    srl_Warn('Deposit', '2 now means store per 2, not ''All''', 15);
  DepositX := False;
  if VariantIsInteger(vType) then
  begin
    DepositX := not InIntArray([1, 5, 10], vType);
    All := vType <> 1;
  end
  else if VariantIsBoolean(vType) then
    All := vType;
  for I := SlotFrom to SlotTo do
  begin
    if (BScreen) then
    begin
      If Not ExistsItem(I) Then
        Continue;
      if (not All) then
        MouseItem(I, mouse_left)
      else
        MouseItem(I, mouse_right);
    end else
    begin
      B := DepositItemBox(I);
      if (not(FindColor(X, Y, srl_outline_black, B.X1, B.Y1, B.X2, B.Y2))) then
        Continue;
      if (not All) then
        Mouse((B.X1 + B.X2) shr 1, (B.Y1 + B.Y2) shr 1, 0, 0, mouse_left)
      else
        Mouse((B.X1 + B.X2) shr 1, (B.Y1 + B.Y2) shr 1, 0, 0, mouse_right);
    end;
    if DepositX then
    begin
      WaitOptionMulti(['tore X','Store X', 'X'], 200);
      T := GetSystemTime;
      while (not (InRange(CountColor(0, 211, 394, 308, 411), 200, 300))) and (GetSystemTime - T < 3000) do
        Wait(100);
      TypeSend(vType);
    end else if VariantIsInteger(vType) then
      WaitOptionMulti(['Store ' + IntToStr(Integer(vType)), 'tore ' + IntToStr(Integer(vType))], 200)
    else
      if not WaitOptionMulti(['tore a','Store All', 'All', 'll ','A1','e A'], 200) then
        ChooseOptionMulti(['tore','Store']);

    T := GetSystemTime;
    Wait(RandomRange(200, 300));
    repeat
      if (BScreen) then
        if (not(ExistsItem(I))) then Break;
      if (DScreen) then
        if (not(FindColor(X, Y, srl_outline_black, B.X1, B.Y1, B.X2, B.Y2))) then Break;
      Wait(50);
    until(GetSystemTime - T > 2000);
  end;
end;

(*
DepositAll
~~~~~~~~~~

.. code-block:: pascal

    function DepositAll: Boolean;

Deposits all items in your inventory.

.. note::

    Author: Shuttleu
    Last Modified: Ashaman88 07

Example:

.. code-block:: pascal

    DepositAll();
*)
function DepositAll: Boolean;
var
  i: integer;
begin
  if (InvEmpty) then
  begin
    Result := True;
    Exit;
  end;

  for i:=1 to 3 do
    deposit(1,28,true);
  Result := WaitFunc(@InvEmpty, 50, 3000);
end;

(*
QuickDeposit
~~~~~~~~~~

.. code-block:: pascal

    procedure QuickDeposit(Which: String);

Withdraws Amount at Column/Row.

.. note::

    Author: Flight
    Last Modified: Flight 12-9-2013

Example:

.. code-block:: pascal

    QuickDeposit('inventory');
*)
procedure QuickDeposit(Which: String);
begin
  if BankScreen then
  begin
    case lowercase(Which) of
      'inventory','inv':          MouseBox(431, 304, 458, 327, mouse_left);
      'equipment','worn','equip': MouseBox(467, 300, 491, 326, mouse_left);
      else
        SRL_Warn('QuickDeposit', 'Invalid deposit method ', WARN_ALLVERSIONS);
    end;
    Wait(200 + Random(300));
  end;
end;

(*
WithdrawEx
~~~~~~~~~~

.. code-block:: pascal

    function WithdrawEx(Col, Row, Amount: Integer; Uptexts: TStringArray): Boolean;

Withdraws Amount at Column/Row.

.. note::

    Author: Starblaster100, Town, Wizzup? and Narcle, small fixes by r!ch!e & EvilChicken!
    Last Modified: Flight [17-10-2013]

Example:

.. code-block:: pascal

    WithdrawEx(1, 3, 28, ['ron ore', 'ore', 'on or']);
*)
function WithdrawEx(Col, Row, Amount: Integer; Uptexts: TStringArray): Boolean;
var
  BBox: TBox;
  X, Y: Integer;
begin
  Result := False;
  FixBank;
  if not bankscreen then
    exit;

  BBox := BankIndexToMSBox(BankPointToBankIndex(Point(Col, Row)));
  GetMousePos(X, Y);
  if (not PointInBox(Point(X, Y), BBox)) then
    MouseBox(BBox.X1 + 5, BBox.Y1 + 5, BBox.X2 - 5, BBox.Y2 - 5, mouse_move);

  if (Length(Uptexts) > 0) then
    if (not WaitUptextMulti(Uptexts, 500)) then
      Exit;

  if (Amount = 1) then
    ClickMouse2(mouse_left)
  else
    ClickMouse2(mouse_right);
  if (Amount = 1) then
  begin
    Result := True;
    Wait(RandomRange(250, 550));
    Exit;
  end else
    if (amount > 1) then
    begin
      if (WaitOptionMultiEx(['Withdraw-' + IntToStr(Amount) + ' ', 'w-' + IntToStr(Amount) + ' ', IntToStr(Amount) + ' '], 'All', Nothing, 500)) then
        Result := ChooseOptionMulti(['Withdraw-' + IntToStr(Amount) + ' ', 'w-' + IntToStr(Amount) + ' ', IntToStr(Amount) + ' ']);
    end;

  if (Amount = -1) then
  begin
    if (WaitOptionMultiEx(['Withdraw-All-but', 'l-b'], 'All', Nothing, 300)) then
      Result := ChooseOptionMulti(['Withdraw-All-but', 'l-b']);
  end else
    if (Amount = 0) then
    begin
      if (WaitOptionMultiEx(['Withdraw-All', 'w-A'], 'All', Nothing, 300)) then
        Result := ChooseOptionMulti(['Withdraw-All', 'w-A']);
    end;

  if (not (Result)) and (Amount > 1) then
  begin
    if (not OptionsExist(['Withdraw', 'ithdraw', 'draw', 'raw'], False)) then
      MouseBox(BBox.X1 + 5, BBox.Y1 + 5, BBox.X2 - 5, BBox.Y2 - 5, mouse_right);
    if WaitOptionMulti(['Withdraw-X', 'w-X', 'X'], 500) then
    begin
       X := GetSystemTime + 10000;
       while (X >= GetSystemTime) and (not (InRange(CountColor(0, 211, 394, 308, 411), 200, 300))) do
         Wait(50);
       Wait(RandomRange(75, 400));
       TypeSend(IntToStr(Amount));
       Result := True;
    end;
  end;
end; 
(*
Withdraw
~~~~~~~~

.. code-block:: pascal

    function Withdraw(Col, Row, Amount: Integer): Boolean;

Withdraws Amount at Column/Row. Column/Row start at 0. Columns are left/right - Rows are up/down.

.. note::

    Author: Starblaster100, Town, Wizzup? and Narcle
    Last Modified: Ashaman88 -07

Example:

.. code-block:: pascal

    Withdraw(0, 0, 28) withdraws 28 of the item in the upper-left most bank slot.
*)
function Withdraw(col, row, Amount: Integer): Boolean;
begin
  Result := WithdrawEx(Col, Row, Amount,[]);
end;

(*
WithdrawItemEx
~~~~~~~~~~~~~~

.. code-block:: pascal

    function WithdrawItemEx(Ident: integer; IdentType: string; var Index: integer;
                 Amount: integer; UpText: String; Tol: TIntegerArray): boolean;

Withdraws an item from the bank by using "Ident" with tol[0]
as color tolerance, tol[1] as contour tolerance in case of bmp
masks, or the count of colors for TPA item finding.
Valid IdentTypes are all in FindItem.

Index:

    The Bank Index where the item is found, must be a variable.
    Speeds up future withdraws.

Amount:

    Amount to withdraw from bank.

UpText:

    The UpText which the function checks for.

.. note::

    Author: Nava2
    Last Modified: Ashaman88 -07

Example:

.. code-block:: pascal

    if WithdrawItemEx(theColor, 'color', itemSlot, 27, 'ew log', [3]) then
    CloseBank;
*)
function WithdrawItemEx(Ident: integer; IdentType: string; var Index: integer; Amount: integer; UpText: string; Tol: TIntegerArray): Boolean;
var
  x, y: integer;
  BPoint: TPoint;
  BankBox: TBox;
  Found: Boolean;
  t: TPointArray;
label
  Start;
begin
  Result := False;
  if not BankScreen then Exit;
  FixBank;

  if (Index = 0) then
  begin
    Start:
    for Index := 1 to 50 do
    begin
      if FindItemEx(x, y, IdentType, Ident, BankIndexToMSBox(Index), Tol) then
      begin
        MMouse(x, y, 4, 4);
        if WaitUpText(UpText, 300) then
        begin
          Writeln('Found Item at Bank Slot ' + IntToStr(Index) + '.');
          Found := True;
          Break;
        end else
          Writeln('Found Incorrect Item, Moving to new Bank Spot.');
      end;
    end;
  end else
  begin
    BankBox := BankIndexToMSBox(Index);
    FindColors(t, srl_outline_black, BankBox.x1, BankBox.y1, BankBox.x2, BankBox.y2);
    BankBox := GetTPABounds(t);
    MouseBox(BankBox.x1, BankBox.y1, BankBox.x2, BankBox.y2, mouse_move);
    if WaitUpText(UpText, 300) then
      Found := true
    else
    begin
      Writeln('Item Moved from Bank Slot ' + IntToStr(Index) + ', checking bank again.');
      goto Start;
    end;
  end;
  Wait(RandomRange(200, 350));
  if Found then
  begin
    BPoint := BankIndexToBankPoint(Index);
    //Writeln(IntToStr(BPoint.x) + ', ' + IntToStr(BPoint.y));
    Withdraw(BPoint.x, BPoint.y, Amount);
    Result := True;
  end else
  begin
    Index := 0;
    SRL_Warn('WithdrawItem', 'Could not find ' + IdentType + ' in bank.', Warn_AllVersions);
  end;
end;

(*
WithdrawItem
~~~~~~~~~~~~

.. code-block:: pascal

    function WithdrawItem(Ident: integer; IdentType: string; Amount: integer;
                           UpText: TStringArray; Tol: TIntegerArray): boolean;

Withdraws an item using WithdrawItemEx, but removes the Index check.

.. note::

    Author: Nava2
    Last Modified: Ashaman88 -07

Example:

.. code-block:: pascal

    if WithdrawItem(theColor, 'color', 27, ['ew log', 'ew l'], [3]) then
    CloseBank;
*)
function WithdrawItem(Ident: integer; IdentType: string; Amount: integer; UpText: String; Tol: TIntegerArray): boolean;
var
  I : Integer;
begin
  Result := WithdrawItemEx(Ident, IdentType, I, Amount, UpText, Tol);
end;

procedure SearchBank(Item: string);
var
  T, i: Integer;
begin
  if (not(BankScreen)) then Exit;

  if (Item = '') then
    if (InRange(CountColor(0, 211, 394, 308, 411), 200, 300)) then
    begin
      Mouse(399, 307, 16, 16, mouse_left);
      T := GetSystemTime;
      while (BankScreen) and (GetSystemTime - T < 5000) do
        Wait(250 + Random(350));
      Exit;
    end;

  for i := 0 to 2 do
  begin
    Mouse(399, 307, 16, 16, mouse_left);
    T := GetSystemTime;
    while (BankScreen) and (GetSystemTime - T < 5000) do
    begin
      Wait(250 + Random(350));
      if (InRange(CountColor(0, 211, 394, 308, 411), 200, 300)) then
      begin
        TypeSend(Item);
        Exit;
      end;
    end;
    Wait(250 + Random(350));
  end;
end;

(*
Notes
~~~~~

.. code-block:: pascal

    procedure Notes(SwitchOn: Boolean);

Toggles withdraw mode to Item or Note (True for Note, False for Item).

.. note::

    Author: lordsaturn & Flight
    Last Modified: Flight 12-9-2013

Example:

.. code-block:: pascal

    Notes(True);
  Withdraw(Col, Row, 100);
*)
procedure Notes(SwitchOn: Boolean);
begin
  if BankScreen then
    if SwitchOn then
    begin
      if (getColor(305, 318) = 5067345) then
        MouseBox(287, 304, 368, 322, mouse_left);
    end else
    begin
      if (getColor(230, 314) = 5067345) and (not SwitchOn) then
        MouseBox(203, 304, 282, 322, mouse_left);
    end;
end;

(*
CloseBank
~~~~~~~~~

.. code-block:: pascal

    function CloseBank: Boolean;

Closes the bank window - Tries twice before exiting

.. note::

    Author: Starblaster100
    Last Modified: elfyyy 11-21-14

Example:

.. code-block:: pascal

  if Withdraw(Col, Row, 100) then
    CloseBank;
*)
function CloseBank: Boolean;
var
  i, Timer: Integer;
  Box: TBox;
begin
  Result := False;
  if BankScreen then
  begin
    if BankTabs then
      Box := IntToBox(476, 14, 497, 32)
    else
      Box := IntToBox(476, 32, 497, 50);

    Timer := GetTimeRunning + 8000;
    repeat
      MouseBox(Box.X1, Box.Y1, Box.X2, Box.Y2, mouse_left);
      for i := 0 to 30 do
      begin
        if not BankScreen then
        begin
          Result:= True;
          Break;
        end;
        Wait(100);
      end;
      Wait(Random(100));
    until (GetTimeRunning > Timer) or Result;
  end;
end;

(*
OpenDepositBox
~~~~~~~~~~~~~~

.. code-block:: pascal

    function OpenDepositBox : Boolean;

Opens the light deposit box (such as the boxes in edgeville).

.. note::

    Author: Ollybest

Example:

.. code-block:: pascal

  if (OpenDepositBox) then
    DepositAll;
*)
function OpenDepositBox: Boolean;
var
  i, CTS, c, Timeout: Integer;
  TPA, TPA1, TPA2: TPointArray;
  ATPA: T2DPointArray;
  P: TPoint;
begin
  Result := (DepositScreen);
  if not (LoggedIn) or (Result) then
    Exit;

  CTS := GetColorToleranceSpeed;
  ColorToleranceSpeed(2);
  Timeout := 5000 + Random(1000);

  // getting the dark edge
  SetColorSpeed2Modifiers(0.22, 0.17);
  FindColorsTolerance(TPA1, 4278092, MSX1, MSY1, MSX2, MSY2, 7);
  // getting the light middle
  SetColorSpeed2Modifiers(0.06, 0.76);
  FindColorsTolerance(TPA2, 10006456, MSX1, MSY1, MSX2, MSY2, 14);

  SetColorSpeed2Modifiers(0.2, 0.2);
  ColorToleranceSpeed(CTS);

  // combining and sorting
  CombineTPAWrap(TPA1, TPA2, TPA);
  SplitTPAWrap(TPA, 5, ATPA);
  SortATPASize(ATPA, True);

  if Length(TPA) < 1 then
    Exit;

  for i := 0 to High(ATPA) do
    if Length(ATPA[i]) > 30 then
    begin
      P := MiddleTPA(ATPA[i]);
      MMouse(P.X, P.Y, RandomRange( -5, 5), RandomRange( -5, 5));
      if WaitUpTextMulti(['Deposit Bank', 'deposit box', 'osit bo', 'eposit '], 400 + Random(100)) then
      begin
        ClickMouse2(True);
        Flag;
        MarkTime(c);
        repeat
          Wait(RandomRange(50, 100));
        until (DepositScreen) or (PinScreen) or (TimeFromMark(C) > Timeout);
        Result := (DepositScreen) or (PinScreen);
        if (Result) then
          Exit;
      end;
    end;
end;                  

(*
OpenBankQuiet
~~~~~~~~~~~~~

.. code-block:: pascal

    function OpenBankQuiet(WhichBank: string): Boolean;

Opens any given bank in the free world using
FindDeformedBitmapToleranceIn. Avoids strange mouse movements. Will cause
significant lag (approx. 1 second), but finds the bank with one click.

Valid arguments are:
'feb' (Falador East Bank)
'fwb' (Falador West Bank)
'veb' (Varrock East Bank)
'vwb' (Varrock West Bank)
'db'  (Draynor Bank)
'eb'  (Edgeville Bank)
'akb' (Al-Kharid Bank)

.. note::

    Author: WT-Fakawi and modified by Ron
    Last Modified: Unknown

Example:

.. code-block:: pascal

  if OpenBankQuiet('feb') then
    Withdraw(...);
*)
function OpenBankQuiet(WhichBank: string): Boolean;
var
  TheCounter, dx, dy, tol, Mark2, Mark3: Integer;
  acc, accthres: Extended;
begin
  result := false;
  case WhichBank of
    'feb', 'fwb': TheCounter := BitmapFromString(1, 10, '6C583296897A948779948779736' +
        'C63A59E968C7F6F9686749B8A7685663E');
    // varrock west
    'vwb': TheCounter:= BitmapFromString(10, 1, 'A0997F504A49504A49504A495E4' +
       'F215E4F215E4F215E4F212C250EA0997F');
    // varrock east
    'veb': TheCounter := BitmapFromString(1, 10, '5E4D1589826D88806D88806D867' +
       'F6C9996907C7664847D648C836891876B');
    // draynor and this works too for alkharid
    'akb', 'db', 'eb': TheCounter:= BitmapFromString(12, 1, '584209735C29735C29735C29605' +
       '85558504D60504D58504D58504D58504D58504D605855');
  else
    begin
      srl_Warn('OpenBankQuiet', 'Unknown bank: ' + WhichBank, warn_AllVersions);
      Exit;
    end;
  end;

  MarkTime(Mark3);
  tol := 1;
  accthres := 0.6;
  repeat
    if (Length(Players) > 0) then
      if (Players[CurrentPlayer].Pin <> '') then
        InPin(Players[CurrentPlayer].Pin);
    if BankScreen or PinScreen then
    begin
      Result := True;
      FreeBitmap(TheCounter);
      Exit;
    end;
    if WaitUpTextMulti(['ank', 'Bo', 'ot'], 1000) then
    begin
      GetMousePos(dx, dy);
      Mouse(dx, dy, 0, 0, mouse_left);
      MarkTime(Mark2);
      repeat
        Wait(10);
        if TimeFromMark(Mark2) > 20000 then
        begin
          WriteLn('Couldn''t find the bank. Exiting');
          FreeBitmap(TheCounter);
          Exit;
        end;
      until BankScreen or PinScreen;
      if (Length(Players) > 0) then
        if (Players[CurrentPlayer].Pin <> '') then
          InPin(Players[CurrentPlayer].Pin);
      Result := True;
      FreeBitmap(TheCounter);
      Exit;
    end;

    FindDeformedBitmapToleranceIn(TheCounter, dx, dy, MSX1 + 50, MSY1 + 50, MSX2
      - 50, MSY2 - 50, tol, 4, True, acc);
    if (acc >= accthres) then
    begin
      if (Length(Players) > 0) then
        if (Players[CurrentPlayer].Pin <> '') then
          InPin(Players[CurrentPlayer].Pin);
      if BankScreen or PinScreen then
      begin
        Result := True;
        FreeBitmap(TheCounter);
        Exit;
      end;
      MMouse(dx, dy, 0, 0);
      if WaitUptextMulti(['ank', 'Bo', 'ot'], 1000) then
      begin
        GetMousePos(dx, dy);
        Mouse(dx, dy, 0, 0, mouse_left);
        MarkTime(Mark2);
        repeat
          Wait(10);
          if TimeFromMark(Mark2) > 20000 then
          begin
            WriteLn('Couldn''t find the bank. Exiting');
            FreeBitmap(TheCounter);
            Exit;
          end;
        until BankScreen or PinScreen;
        if (Length(Players) > 0) then
          if (Players[CurrentPlayer].Pin <> '') then
            InPin(Players[CurrentPlayer].Pin);
        Result := True;
        FreeBitmap(TheCounter);
        Exit;
      end;
    end;
    Wait(100);
    tol := tol + 4;
    if tol >= 20 then
    begin
      tol := 1;
      accthres := accthres - 0.1;
      if accthres < 0.2 then
      begin
        WriteLn('Couldn''t find the bank. Exiting');
        FreeBitmap(TheCounter);
        Exit;
      end;
    end;
  until TimeFromMark(Mark3) > 60000;
  FreeBitmap(TheCounter);
end;

(*
OpenBankGlass
~~~~~~~~~~~~~

.. code-block:: pascal

    function OpenBankGlass(WhichBank: String; ChangeCompass, ChangeAngle: Boolean): Boolean;

Opens the bank.
Valid arguments are:
'feb' (Falador East Bank)
'fwb' (Falador West Bank)
'veb' (Varrock East Bank)
'vwb' (Varrock West Bank)
'db'  (Draynor Bank)
'akb' (Al-Kharid Bank)
'eb'  (Edgeville Bank)
'ctb' (Catherby bank)
'clt' (Camelot bank)
'nab' (North Ardougne bank)
'sab' (South Ardougne bank)
'ynb' (Yanille bank)
'ngb' (North gnome bank)
'sgb' (South gnome bank)
'wgb' (Warrior guild bank)
'fgb' (Fishing guild bank)

.. note::

    Author: Wizzup? and modified by Ron
    Last Modified: Unknown

Example:

.. code-block:: pascal

  if OpenBankGlass('feb', True, False) then
    Withdraw(...);
*)
function OpenBankGlass(WhichBank: string; ChangeCompass, ChangeAngle: Boolean): Boolean;
var
  OBC: TPoint;
  c, Speed, Col: Integer;
begin
  result := false;
  Speed := GetColorToleranceSpeed;
  ColorToleranceSpeed(2);
  if ChangeAngle then SetAngle(SRL_ANGLE_HIGH);
  if ChangeCompass then
  begin
    c := Random(2);
    case WhichBank of
      'feb', 'fwb', 'veb', 'ctb', 'clt', 'nab': if c = 0 then MakeCompass('N') else MakeCompass('S');
      'akb', 'db', 'eb', 'vwb', 'sab', 'ynb', 'sgb', 'wgb', 'fgb': if c = 0 then MakeCompass('E') else MakeCompass('W');
      'ngb': if c = 0 then MakeCompass(45) else MakeCompass(225);
    end;
  end;
  Col := 10070458;
  If (WhichBank = 'nab') or (WhichBank = 'sab')then
    Col := 8095371;
  if FindColorSpiralTolerance(OBC.x, OBC.y, Col, MSX1, MSY1, MSX2, MSY2, 10) then
  begin
    if WaitUpTextMulti(['nk', 'bo', 'ot'], 1000) then
    begin
      Mouse(OBC.x, OBC.y, 0, 0, mouse_left);
      FFlag(0);
      Wait(2000 + Random(500));
      if (Length(Players) > 0) then
        if (Players[CurrentPlayer].Pin <> '') then
          InPin(Players[CurrentPlayer].Pin);
      Result := (BankScreen) or (PinScreen);
    end;
  end else
    if FindObj(OBC.x, OBC.y, 'ank', 10070458, 20) then
    begin
      Mouse(OBC.x, OBC.y, 0, 0, mouse_left);
      FFlag(0);
      Wait(2000 + Random(500));
      if (Length(Players) > 0) then
        if (Players[CurrentPlayer].Pin <> '') then
          InPin(Players[CurrentPlayer].Pin);
      Result := (BankScreen) or (PinScreen);
    end;
  ColorToleranceSpeed(Speed);
end;

(*
OpenBankFast
~~~~~~~~~~~~

.. code-block:: pascal

    function OpenBankFast(Location: String): Boolean;

Opens the bank.
Valid arguments are:
'feb', 'falador east bank'
'fwb', 'falador west bank'
'veb', 'varrock east bank'
'vwb', 'varrock west bank'
'db' , 'draynor bank'
'akb', 'al-kharid bank'
'eb'  (Edgeville Bank)
'ctb', 'catherby bank'
'clt', 'camelot bank'
'nab', 'north ardougne bank'
'sab', 'south ardougne bank'
'ynb', 'yanille bank'
'ngb', 'north gnome bank'
'sgb', 'south gnome bank'
'wgb', 'warrior guild bank'
'fgb', 'fishing guild bank'
'tavb', 'taverly bank'

.. note::

    Author: Wizzup? and Nielsie95
    Last Modified: Unknown

Example:

.. code-block:: pascal

  if OpenBankFast('feb') then
    Withdraw(...);
*)
function OpenBankFast(Location: String): Boolean;
var
  bo, i, l, c, z: Integer;
  Info: TVariantArray;
  Booths: TPointArray;
  ABooths: T2DPointArray;
  UpText: TStringArray;
  B: TBox;
begin
  result := false;
  if (not LoggedIn) then
    Exit;
  if BankScreen or PinScreen then
  begin
    Result := True;
    Exit;
  end;
  UpText := ['Bank booth', 'ank boo', 'anker', 'ank'];

  case LowerCase(Location) of {            Sort X     Sort Y     Color    Tol   Hue   Sat   Count  SplitTPA?  W   H }
    'cg', 'cooking guild':        Info := [MSCX,      MSCY,      5666708,  17,  0.06, 0.77,  100,   False,   10, 10];
    'akb', 'al kharid':           Info := [MSCX - 50, MSCY,      4146507,  10,  0.90, 1.24,  100,   False,   10, 10]; // Fixed 1/5, #40
    'lb', 'lumbridge':            Info := [MSCX,      MSCY,      12370116, 13,  0.65, 0.10,  30,    True,    5, 5]; // 07 fixed
    'veb', 'varrock east':        Info := [MSCX,      MSCY + 50, 3037545,  5,   0.41, 1.32,  100,   False,   10, 10]; // Fixed 12/7, #40
    'vwb', 'varrock west':        Info := [MSCX,      MSCY,      3037545,  5,   0.41, 1.32,  100,   False,   10, 10]; // Fixed 12/7, #40
    'feb', 'falador east':        Info := [MSCX,      MSCY + 50, 5008519,  10,  0.22, 0.67,  100,   False,   10, 10]; // Fixed 12/7, #40
    'fwb', 'falador west':        Info := [MSCX,      MSCY + 50, 5074569,  15,  0.22, 0.67,  50,    False,   10, 10]; // Fixed 12/7, #40
    'db', 'draynor': begin UpText := ['ount', 'unte', 'oun', 'unter'];
                                  Info := [MSCX - 50, MSCY,      5136741,  5,    0.73, 0.49, 15,    False,   10, 10]; // Fixed 12/7, #40
                     end;
    'eb', 'edgeville bank':       Info := [MSCX + 20, MSCY,      3561835,  20,   0.32, 0.61, 50,    False,   10, 10]; // Fixed 12/7, #40
    'ctb', 'catherby bank':       Info := [MSCX,      MSCY,      3239049,  8,    0.20, 0.20, 100,   False,   10, 10];
    'clt', 'camelot bank':        Info := [MSCX,      MSCY,      7636882,  5,    0.20, 0.20, 100,   False,   10, 10];
    'nab', 'north ardougne bank': Info := [MSCX,      MSCY,      4084572,  5,    0.20, 0.20, 100,   False,   10, 10];
    'sab', 'south ardougne bank': Info := [MSCX,      MSCY,      606035,  10,    0.12, 0.70, 50,   False,   10, 10];
    'ynb', 'yanille bank':        Info := [MSCX,      MSCY,      3239049,  7,    0.20, 0.20, 100,   False,   10, 10];
    'ngb', 'north gnome bank':    Info := [MSCX,      MSCY,      3239049,  7,    0.20, 0.20, 100,   False,   10, 10];
    'sgb', 'south gnome bank':    Info := [MSCX,      MSCY,      3239049,  7,    0.20, 0.20, 100,   False,   10, 10];
    'wgb', 'warrior guild bank':  Info := [MSCX,      MSCY,      2578286,  7,    0.20, 0.20, 100,   False,   10, 10];
    'fgb', 'fishing guild bank':  Info := [MSCX,      MSCY,      2908796,  10,   0.20, 0.20, 100,   False,   10, 10];
    'tavb', 'taverly bank': begin UpText := ['ount','unte','oun','unter'];
                                  Info := [MSCX,      MSCY,      3556433,  7,   0.20, 0.20, 100,   False,   10, 10];
                            end;
    else
    begin
      srl_Warn('OpenBankFast', 'Unknown bank: '+Location, warn_AllVersions);
      Exit;
    end;
  end;

  MakeCompass('n');
  z := GetColorToleranceSpeed;
  ColorToleranceSpeed(2);
  SetColorSpeed2Modifiers(Info[4], Info[5]);

  FindColorsSpiralTolerance(Info[0], Info[1], Booths, Info[2], MSX1, MSY1, MSX2, MSY2, Info[3]);
  ColorToleranceSpeed(z);
  SetColorSpeed2Modifiers(0.2, 0.2);

  { Split to ATPA. }
  if Info[7] then
    ABooths := SplitTPA(Booths, 10)
  else
    ABooths := TPAtoATPA(Booths, 10);

  Booths := [];

  { Go through ATPA. }
  l := GetArrayLength(ABooths) -1;
  for i := 0 to l do
  begin
    { Too few pixels. }
    if (Length(ABooths[i]) < Info[6]) then
      Continue;

    { Too small TPA bounds. }
    B := GetTPABounds(ABooths[i]);
    If ((B.X2 - B.X1) < Info[8]) Or ((B.Y2 - B.Y1) < Info[9]) Then
      Continue;

    Inc(bo);
    SetArrayLength(Booths, bo);
    Booths[bo-1] := MiddleTPA(ABooths[i]);

  end;

  SortTPAFrom(Booths, Point(Info[0], Info[1]));

  l := GetArrayLength(Booths) -1;
  for i := 0 to l do
  begin

    MMouse(Booths[i].X, Booths[i].Y, 3, 3);
    if WaitUpTextMulti(UpText, 1000) Then
    begin
      GetMousePos(Booths[i].X, Booths[i].Y);
      Mouse(Booths[i].X, Booths[i].Y, 0, 0, mouse_right);
      if waitoptionmulti(['ank ' ,'nk ', 'B@'],400) then  //revert back to this once jagex introduces one click bank booth
      //if waitoptionmulti(['Use-quickly','e-quic','se-quickl'],400) then
      begin
        MarkTime(c);
        repeat
          Wait(100);
        until (BankScreen) or (PinScreen) or (TimeFromMark(c) > 10000);
        Wait(Random(300));
        if (HowManyPlayers > 0) then
          if (Players[CurrentPlayer].Pin <> '') then
            InPin(Players[CurrentPlayer].Pin);
        Result := (BankScreen) or (PinScreen);
        if (Result) then Exit;
      end;
    end;
  end;
end;

(*
OpenBankNPCEx
~~~~~~~~~~~~~

.. code-block:: pascal

    function OpenBankNPCEx(Color: String): Boolean;

Opens the bank by using the NPC banker.

Vaild colors are:
'blue' - most bankers.. edgeville, varrock etc.
'green' - al-kharid.
'gray', 'grey' - ardougne.

.. note::

    Author: Ollybest (Heavily copyied home's function)

Example:

.. code-block:: pascal

  if (OpenBankNPCEx('green') then
    Withdraw(...);

*)
function OpenBankNPCEx(Color: String): Boolean;
var
  NPCBox: TBox;
  Colors, NPCArray: TPointArray;
  ATPA: T2DPointArray;
  MSNPC, NPCPoint: TPoint;
  CTS, C, II, I, TimeOut: Integer;
  Info: TVariantArray;
begin
  Result := False;
  if not (LoggedIn) then
    Exit;
  Result := (BankScreen) or (PinScreen);
  if (Result) then
    Exit;

    case Lowercase(Color) of { Color  Tol   Hue   Sat  }
      'blue': Info := [4336177,  15,   0.16, 0.66];
      'green': Info := [1988959, 17,   0.11, 1.52];
      'gray', 'grey': Info := [5855838,  8,   0.42, 0.11];
    else
    begin
      srl_Warn('OpenBankNPCEx', 'Unknown banker color: '+ Color, warn_AllVersions);
      Exit;
    end;
  end;

  TimeOut := 5000 + Random(1200);
  NPCArray := GetMinimapDots('NPC');

  If Length(NPCArray) < 1 then
    Exit;

  SortTPAFrom(NPCArray, Point(MMCX, MMCY));
  for I := 0 to High(NPCArray) do
  begin
    NPCPoint := MMToMS(NPCArray[I])
    If (NPCPoint.x = -1) and (NPCPoint.y = -1) then
      Continue;
    with NPCPoint do
      NPCBox := IntToBox(Max(X - 40, MSX1), Max(Y - 40, MSY1), Min(X + 40, MSX2), Min(Y + 40, MSY2));

    If PixelShift(NPCBox, 150) > 500 then
      Continue;

    CTS := GetColorToleranceSpeed;
    ColorToleranceSpeed(2);
    SetColorSpeed2Modifiers(Info[2], Info[3]);
    FindColorsTolerance(Colors, Info[0], NPCBox.X1, NPCBox.Y1, NPCBox.X2, NPCBox.Y2, Info[1]);
    SetColorSpeed2Modifiers(0.2, 0.2);
    ColorToleranceSpeed(CTS);

    TPAtoATPAExWrap(Colors, 15, 25, ATPA);
    SortATPASize(ATPA, True);

    for II := 0 to High(ATPA) do
    begin
      MSNPC := MiddleTPA(ATPA[II]);
      MMouse(MSNPC.X, MSNPC.Y, RandomRange(-3, 3), RandomRange(-3, 3));
      If WaitUpTextMulti(['ooth', 'anker', '-to Banker', 'Bank'], 400 + Random(100)) then
      begin
        ClickMouse2(False);
        If WaitOptionMulti(['Bank B', 'nk B', 'ank Banker'], 600 + Random(200)) then
          MarkTime(c);
        Flag;
        repeat
          Wait(RandomRange(50, 100));
        until (BankScreen) or (PinScreen) or (TimeFromMark(C) > TimeOut);
        if not (AllPlayersInactive) then
          if (Players[CurrentPlayer].Pin <> '') then
            InPin(Players[CurrentPlayer].Pin);     
        Result := (BankScreen) or (PinScreen);
        If (Result) then
          Exit;
      end;
    end;
  end;
end;

(*
OpenBankNPC
~~~~~~~~~~~

.. code-block:: pascal

    function OpenBankNPC: Boolean;

Attempts to open the *blue* NPC banker.
(used as a wrapper to prevent breaking script)

.. note::

    Author: Ollybest.

Example:

.. code-block:: pascal

  if (OpenBankNPC) then
    Withdraw(...);
*)
function OpenBankNPC: Boolean;
begin
  Result := OpenBankNPCEx('blue');
end; 

(*
OpenBankChestEdge
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function OpenBankChestEdge(Location: String): Boolean;

Opens the bank.  Valid arguments are:
    * SRL_BANK_SW (Soul Wars Bank)
    * SRL_BANK_CW (Castle Wars Bank)
    * SRL_BANK_B (Burthrope)
    * SRL_BANK_GG (Gamer's Grotto)
    * SRL_BANK_SP (Shantay Pass)

.. note::

    Author: -daazndagger-
    Last Modified: Jan 27th, 2013

Example:

.. code-block:: pascal

  if OpenBankChestEdge(SRL_BANK_SW) then
    Withdraw(...);
*)
function OpenBankChestEdge(Location: Integer): Boolean;
var
  bo, i, l, c, z: Integer;
  Info: TVariantArray;
  Chests: TPointArray;
  AChests: T2DPointArray;
  UpText, ChooseOp: TStringArray;
  B: TBox;
begin
  result := false;
  if (not LoggedIn) then
    Exit;
  if BankScreen or PinScreen then
  begin
    Result := True;
    Exit;
  end;
  if Location = SRL_BANK_SP then
  begin
    UpText := ['Shantay', 'chest', 'tay che'];
    ChooseOp := ['Open', 'pen Sh'];
  end else
  begin
    UpText := ['Bank', 'chest', 'nk che'];
    ChooseOp := ['Use', 'se'];
  end;
                   {              0          1         2        3     4     5      6       7       8   9     10   }
  case Location of {            Sort X     Sort Y     Color    Tol   Hue   Sat   Count  SplitTPA?  W   H   Compass}
    SRL_BANK_SW :      Info := [MSCX     , MSCY,      10198185, 21,   0.08, 0.25,  50,   True ,   10, 10,   'w'];
    SRL_BANK_CW :      Info := [MSCX     , MSCY,      10198185, 21,   0.08, 0.25,  50,   True ,   10, 10,   'n'];
    SRL_BANK_B  :      Info := [MSCX     , MSCY,      10198185, 21,   0.08, 0.25,  50,   True ,   10, 10,   'n'];
    SRL_BANK_GG :      Info := [MSCX     , MSCY,      5921630,  9 ,   0.47, 0.08,  50,   True ,   10, 10,   'n'];
    SRL_BANK_SP :      Info := [MSCX     , MSCY,      6715270,  4 ,   0.19, 0.29,  50,   True ,   10, 10,   'n'];

    else
    begin
      srl_Warn('OpenBankChestEdge', 'Unknown bank: '+IntToStr(Location), warn_AllVersions);    //will output loc as int (no longer string)
      Exit;
    end;
  end;

  MakeCompass(Info[10]);
  //SetAngle(SRL_ANGLE_HIGH);  //??
  z := GetColorToleranceSpeed;
  ColorToleranceSpeed(2);
  SetColorSpeed2Modifiers(Info[4], Info[5]);

  FindColorsSpiralTolerance(Info[0], Info[1], Chests, Info[2], MSX1, MSY1, MSX2, MSY2, Info[3]);
  ColorToleranceSpeed(z);
  SetColorSpeed2Modifiers(0.2, 0.2);

  { Split to ATPA. }
  if Info[7] then
    AChests := SplitTPA(Chests, 3)
  else
    AChests := TPAtoATPA(Chests, 10);

  Chests := [];

  { Go through ATPA. }
  l := GetArrayLength(AChests) -1;
  for i := 0 to l do
  begin
    { Too few pixels. }
    if (Length(AChests[i]) < Info[6]) then
      Continue;

    { Too small TPA bounds. }
    B := GetTPABounds(AChests[i]);
    If ((B.X2 - B.X1) < Info[8]) Or ((B.Y2 - B.Y1) < Info[9]) Then
      Continue;

    Inc(bo);
    SetArrayLength(Chests, bo);
    Chests[bo-1] :=  MiddleBox(GetTPABounds(AChests[i]));

  end;

  SortTPAFrom(Chests, Point(Info[0], Info[1]));

  l := GetArrayLength(Chests) -1;
  for i := 0 to l do
  begin

    MMouse(Chests[i].X, Chests[i].Y, 3, 3);
    if WaitUpTextMulti(UpText, 1000) Then
    begin
      GetMousePos(Chests[i].X, Chests[i].Y);
      Case Random(9) of
        0..7: Mouse(Chests[i].X, Chests[i].Y, 0, 0, mouse_left);
        8: begin
             Mouse(Chests[i].X, Chests[i].Y, 0, 0, mouse_right);
             if not WaitOptionMulti(ChooseOp, 1000) then Exit;
        end;
      end;
      FFLag(0);
      MarkTime(c);
      repeat
        Wait(100);
      until (BankScreen) or (PinScreen) or (TimeFromMark(c) > 10000);
      Wait(Random(300));
      if (HowManyPlayers > 0) then
        if (Players[CurrentPlayer].Pin <> '') then
          InPin(Players[CurrentPlayer].Pin);
      Result := (BankScreen) or (PinScreen);
      if (Result) then Exit;
    end;
  end;
end;

(*
OpenBankChest
~~~~~~~~~~~~~

.. code-block:: pascal

    function OpenBankChest(WhichBank): Boolean;

Opens the bank.  Valid arguments are:
    * SRL_BANK_SW (Soul Wars Bank)
    * SRL_BANK_CW (Castle Wars Bank)
    * SRL_BANK_B (Burthrope)

.. note::

    Author: SRL Dev Team
    Last Modified: 18/01/2012

Example:

.. code-block:: pascal

  if OpenBankChest(SRL_BANK_SW) then
    Withdraw(...);
*)
function OpenBankChest(WhichBank: Integer): Boolean;
begin
  result := false;
  if BankScreen or PinScreen then
  begin
    Result := True;
    Exit;
  end;

  Result := OpenBankChestEdge(WhichBank);

end;

(*
OpenBank
~~~~~~~~

.. code-block:: pascal

    function OpenBank(WhichBank: String, ChangeCompass, ChangeAngle: Boolean): Boolean;

Opens the bank if possible.
Valid arguments are:
'feb' (Falador East Bank)
'fwb' (Falador West Bank)
'veb' (Varrock East Bank)
'vwb' (Varrock West Bank)
'db'  (Draynor Bank)
'akb' (Al-Kharid Bank)
'eb'  (Edgeville Bank)
'lb'  (Lumbridge Bank)
'ctb' (Catherby bank)
'clt' (Camelot bank)
'nab' (North Ardougne bank)
'sab' (South Ardougne bank)
'ynb' (Yanille bank)
'ngb' (North gnome bank)
'sgb' (South gnome bank)
'wgb' (Warrior guild bank)
'fgb' (Fishing guild bank)

.. note::

    Author: SRL Dev Team
    Last Modified: January 31st, 2012 by Coh3n

Example:

.. code-block:: pascal

  if OpenBank('feb', False, True) then
    Withdraw(...);
*)
function OpenBank(WhichBank: variant; ChangeCompass, ChangeAngle: Boolean): Boolean;
var
  I: Integer;
begin
  result := false;
  if BankScreen then
  begin
    Result := True;
    Exit;
  end;

  if VariantIsInteger(WhichBank) then
    if (OpenBankChest(WhichBank)) then
    begin
      Result := true;
      Exit;
    end;

  for I := 0 to 3 do
  begin
    case I of
      0: Result := OpenBankFast(WhichBank);
      1: Result := OpenBankGlass(WhichBank, ChangeCompass, ChangeAngle);
      2: Result := OpenBankQuiet(WhichBank);
      3: Result := OpenBankNPC;
    end;

    if Result then
      Exit;
  end;
end;

(*
FindBank
~~~~~~~~

.. code-block:: pascal

    function FindBank(TheBank: String): Boolean;

Valid arguments are:
'feb' (Falador East Bank)
'fwb' (Falador West Bank)
'veb' (Varrock East Bank)
'vwb' (Varrock West Bank)
'db'  (Draynor Bank)
'akb' (Al-Kharid Bank)
'ctb' (Catherby bank)
'clt' (Camelot bank)
'nab' (North Ardougne bank)
'sab' (South Ardougne bank)
'ynb' (Yanille bank)
'ngb' (North gnome bank)
'sgb' (South gnome bank)
'fgb' (Fishing guild bank)

.. note::

    Author: WT-Fakawi and modified by Ron
    Last Modified: Unknown

Example:

.. code-block:: pascal

  if FindBank('feb') then
    Withdraw(...);
*)
function FindBank(TheBank: string): Boolean;
var
  bx, by, TheDTM: Integer;
  WhichAngle: Extended;
begin
  result := false;
  TheBank := LowerCase(TheBank);
  case TheBank of
    'feb': TheDTM := DTMFromString('78DA63AC67626088634001FFFFFD63F80FA41' +
        '9416C2060AC01AA4987C83141D5FCF9C3C4C0055503028CAD44A8' +
        'E924AC0600131E11B5');
    'fwb': TheDTM := DTMFromString('78DA636C676260086540038C0CFFC12403C37' +
        'F206004A98986C8304155FCF9C3C4C0055503D6D14C849A6EC26A' +
        '009F5A0EA1');
    'db': TheDTM := DTMFromString('78DA632C6162608866400181DEDE0CFF81342' +
       '310FF0702C62CA09A4454357FFE30313043D58000584D1C116AC2' +
       'F0AB0100EC370F0C');
    'veb': TheDTM := DTMFromString('78DA63EC61626008624001FFFFFD63F80FA41' +
        '9416C2060EC00AA8982C83141D5FCF9C3C4C0055503028C138850' +
        'D343580D00122211A9');
    'vwb': TheDTM := DTMFromString('78DA63EC606260B066C000FF819811440301E' +
        '354A01A3B88381354FECF1F260611A81A1000AB3125428D2E7E35' +
        '0087F80E5E');
    'akb': TheDTM := DTMFromString('78DA636C606260F06140019D9D710CFF81342' +
        '310FF0702C652A01A37881C1354CD9F3F4C0C5C5035200056E345' +
        '841A3FFC6A002A3B0F97');

    'ctb': TheDTM := DTMFromString('78DA63CC63626008624001478F1E65F80FA41' +
       '981F83F1030A602D578A0AAF9F387898119AA060418F388505344' +
       '849A32C26A00FE5D12EE');
    'clt': TheDTM := DTMFromString('78DA63CC67626008604001E78E1F67F80FA41' +
       '981F83F10306601D5B8A2AAF9F387898119AA060418CB88505345' +
       '849A3AC26A000B52130B');
    'nab': TheDTM := DTMFromString('78DA63AC61626008654001135A8B19FE03694' +
       '620FE0F048C454035B1A86AFEFC61626086AA0101C66A22D47400' +
       'D5C4E057030045F20FE7');
    'sab': TheDTM := DTMFromString('78DA632C656260086040017DCD850CFF81342' +
       '310FF0702C63AA09A6454357FFE30313043D58000584D180135F5' +
       '40359EF8D500003F560FC7');
    'ynb': TheDTM := DTMFromString('78DA632C60626008654001E78E1F67F80FA41' +
       '981F83F10305601D5F8A2AAF9F387898119AA0604182B31CDC1AA' +
       '260ABF1A009CFB108C');
    'ngb': TheDTM := DTMFromString('78DA632C66626008654001FFFFFF67F80FA41' +
       '921ECFF8CB94035B1A86AFEFC61626086AA0101C632C26A00AD6D' +
       '0E64');
    'sgb': TheDTM := DTMFromString('78DA632C606260086640038C0CFFC12403C37' +
       'F20604C05AA894255F1E70F130333540D5807484D18116AFCF0AB' +
       '01006D100DF4');

    'fgb': TheDTM := DTMFromString('78DA632C626260F0654001F5311E0CFF81342' +
       '310FF0702C64CA01A1754357FFE30313043D58000588D27116A02' +
       '8950138A5F0D0041A911BD');
    'eb' : TheDTM := DTMFromString('78DA63E4666060E0614001EF2F2832FC07D28' +
       'C40FC1F0818E5800C7154355FBF426846289F51124848A3AAF9F3' +
       '8709558D0490504255F3EF9F20A6395AF8D500008FCC0FE1');
    else
    begin
      srl_Warn('FindBank', 'Invalid bank name', warn_Warning);
      Exit;
    end;
  end;
  if FindDtmRotated(TheDTM, bx, by, MMX1, MMY1, MMX2, MMY2, Radians(-30), Radians(30), 0.05, WhichAngle) then
  begin
    Mouse(bx, by, 0, 0, mouse_left);
    FFlag(0);
    Wait(300+Random(400));
    Result := OpenBank(TheBank, False, False);
  end;
  FreeDTM(TheDTM);
end;
