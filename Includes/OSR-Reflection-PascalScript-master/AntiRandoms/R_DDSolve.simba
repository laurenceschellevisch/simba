{* R_DDSolve
+Detection and solving
+By: elfyyy
+
+*}
var
  RDemonVars_Signs: array[0..3] of Integer;

function R_DetectDD: Boolean;
var
  me: Tpoint;
begin
  result:= false;
  me:= R_GetTileGlobal;
  if (((me.x > 3157) and (me.x < 3169)) and ((me.y > 4815) and (me.y < 4825))) then
    result:= true;
end;

(**
 * Author: elfyyy
 * Description: Finds and talks to sergeant
 *)
function R_TalkToSergeant: Boolean;
var
  Sergeant: TNPC;
  Fsafe: integer;
  Loc: Tpoint;
begin
  result:= False;
  Marktime(Fsafe);
  while (not result) and (TimeFromMark(Fsafe) < 5000) do begin
    R_FindNPC('Sergeant Damien', Sergeant);
    Loc := Point(Sergeant.Tile.x, Sergeant.Tile.y);
    Loc := R_TileToMs(Loc);
    mmouse(Loc.x, Loc.y, 0, 0);
    if R_WaitUptext('Sergeant Damien', 100) then begin
      ClickMouse2(Mouse_Left);
      while R_IsWalking do
        wait(200);
      wait(500);
      Result := AreTalking;
    end;
  end;
end;

(**
 * Author: Taken from Reflection2
 * Description: Uses setting array to determine mat layout.
 *)
procedure R_LoadSigns;
var
  Setting: Integer;
begin
  Setting := R_Getsetting(531);
  case Setting of
    668: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 4;
    end;
    675: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 4;
    end;
    724: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 4;
    end;
    738: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 4;
    end;
    787: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 4;
    end;
    794: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 4;
    end;
    1116: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 3;
    end;
    1123: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 3;
    end;
    1228: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 3;
    end;
    1249: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 3;
    end;
    1291: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 3;
    end;
    1305: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 3;
    end;
    1620: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 2;
    end;
    1634: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 2;
    end;
    1676: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 2;
    end;
    1697: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 2;
    end;
    1802: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 2;
    end;
    1809: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 2;
    end;
    2131: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 1;
    end;
    2138: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 1;
    end;
    2187: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 1;
    end;
    2201: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 1;
    end;
    2250: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 1;
    end;
    2257: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 1;
    end;
  end;
end;

(**
 * Author: elfyyy
 * Description: Gets current assignment, ensuring we are talking to sergeant first.
 *)
function R_GetAssignment: integer;
begin
if not AreTalking then
  R_TalkToSergeant;
  Result := 5;
  if FindNPCChatTextMulti(['tar', 'jump'], nothing) then
    Result := 1;
  if FindNPCChatTextMulti(['push'], nothing) then
    Result := 2;
  if FindNPCChatTextMulti(['sit'], nothing) then
    Result := 3;
  if FindNPCChatTextMulti(['jog'], nothing) then
    Result := 4;
end;

(**
 * Author: Krazy_Meerkat
 * Description: Solves Drill Demon random.
 *)
function R_SolveDD: boolean;
var
  i, FailTime: integer;
  MatTile, MatTileMS: Tpoint;
begin
  Result := False;
  MarkTime(FailTime);
  repeat
  result := not R_DetectDD;
  if (FindNPCChatTextMulti(['orders', 'corps'], nothing)) then
  begin
    ClickTocontinue;
    Sleep(250 + Random(250));
    ClickToContinue;
    Sleep(250 + Random(250));
  end;
  if (FindNPCChatTextMulti(['actually', 'take'], nothing)) then
    ClickToContinue;
  R_LoadSigns;
  i := R_GetAssignment;
  case i of
    RDemonVars_Signs[0]: MatTile := Point(3160, 4820);
    RDemonVars_Signs[1]: MatTile := Point(3162, 4820);
    RDemonVars_Signs[2]: MatTile := Point(3164, 4820);
    RDemonVars_Signs[3]: MatTile := Point(3166, 4820);
  end;
  MatTileMS := R_TileToMS(MatTile);
  if MatTileMS.x = -1 then
    R_WalkToTileMM(MatTile);
  Mmouse(MatTileMS.x, MatTileMS.y, 2, 2);
  if R_WaitUptext('Exercise mat', 500) then begin
    ClickMouse2(Mouse_Left);
    while R_IsWalking do
      wait(200);
   wait(randomrange(5000,7500));
   end;
   until((result) or (TimeFromMark(FailTime) > 300000));
end;







