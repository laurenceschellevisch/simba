//-----------------------------------------------------------------//
//--               SRL Resource Library                          --//
//--                   Firemaking routines                       --//
//-----------------------------------------------------------------//
// * procedure LoadFireMakingBitmaps;                              // * by WT-Fakawi
// * function CantLightCheck;                                      // * by EvilChicken!
// * function LightWait: Boolean;                                  // * by EvilChicken!
// * function WeHaveLogs(var WhereX, WhereY: Integer): Boolean;    // * by WT-Fakawi
// * function ThereIsFire(var WhereX, WhereY: Integer): Boolean;   // * by WT-Fakawi
// * procedure SetupFiremaking;                                    // * by SRL

{ var Fire, Tinderbox, LogMask: Integer;
  Description: Variables containing the firemaking bitmaps. }
var
  Fire, Tinderbox, LogMask: Integer;

{*******************************************************************************
procedure LoadFireMakingBitmaps;
By: WT-Fakawi
Description: Loads bitmaps into memory or frees it from memory.
*******************************************************************************}
procedure LoadFireMakingBitmaps;
begin
  Fire := BitmapFromString(1, 11, '3B3000F4C63FF8C83FF4C73EE6' +
    'BC39E6BC39BC922CE6BE45BC9E38BC9E3B352A00');

  TinderBox := BitmapFromString(7, 3, 'beNoLCrC2stRSZdNVByEDL' +
       'XYI8vJ0t7O1VldihYhDpMJCgoKDAgL9/YDI39cbiIIBYsIMuA==');

  LogMask := BitmapFromString(31, 25, 'z78DAED97810D002008C35' +
    'EE20AFF3FC90F0806852EB207A88EC030EBD1726530C5D938FCA7' +
    '24B7C8575AAF5FCA712D5397D0695D7EFD49AEDB2DEAE47106E62' +
    'EF349983BD77781CF9CEFA5211FF221AF9F90BAE4CC1BE434E757' +
    'DE869555EE7232F39B56FE519954845FDD2F1893E2');
end;

{*******************************************************************************
function CantLightCheck: Boolean;
By: EvilChicken!
Description: Results True if able to light logs
*******************************************************************************}
function CantLightCheck: Boolean;
begin
  Result := FindBlackChatMessage('can');
end;

{*******************************************************************************
function LightWait: Boolean;
By: EvilChicken!
Description: Waits till Logs are Lighted
*******************************************************************************}
function LightWait: Boolean;
var
  I: Byte;
begin
  if FindBlackChatMessage('attempt') then
    while (not FindBlackChatMessage('catch')) do
    begin
      Inc(I);
      if (I > 35) then exit;
      Wait(100 + Random(100));
    end;
  Result := True;
end;

{*******************************************************************************
function WeHaveLogs(var WhereX, WhereY: Integer): Boolean;
By: WT-Fakawi
Description: Checks if there is Logs in your Inventory Returns X,Y Cords of Log
*******************************************************************************}
function WeHaveLogs(var tx, ty: Integer): Boolean;
begin
  GameTab(tab_Inv);
  Wait(100 + Random(100));
  Result := FindBitmapMaskTolerance(LogMask, Tx, Ty, MIX1, MIY1, MIX2, MIY2, 10, 2);
end;

{*******************************************************************************
function ThereIsFire(var WhereX, WhereY: Integer): Boolean;
By: WT-Fakawi
Description: Checks if there is lit fire in MainScreen. Returns X, Y Cords.
*******************************************************************************}
function ThereIsFire(var WhereX, WhereY: Integer): Boolean;
var
  Times, Tol: Integer;
  Acc, Ref: Extended;
begin
  Result := False;
  if (not LoggedIn) then Exit;
  ref := 0.8;
  tol := 1;
  for Times := 1 to 4 do
  begin
    FindDeformedBitmapToleranceIn(Fire, WhereX, WhereY, MSCX - (25 * Times), MSCY - (25
      * Times), MSCX + (25 * Times), MSCY + (25 * Times), tol, 2, True, acc);
    if (Acc >= Ref) then
    begin
      Result := True;
      Exit;
    end;
    Ref := Ref - 0.1;
    IncEx(Tol, 10);
    Wait(10);
  end;
  Result := False;
end;

{*******************************************************************************
procedure SetupFiremaking;
By: SRL
Description: Declares Global Bitmaps.
*******************************************************************************}
procedure SetupFiremaking;
begin
  LoadFireMakingBitmaps;
end;
